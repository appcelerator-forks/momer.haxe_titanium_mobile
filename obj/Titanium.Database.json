{
  "tagname": "class",
  "name": "Titanium.Database",
  "doc": "<p>@platform android 0.8\n@platform blackberry 3.1.2\n@platform iphone 0.8\n@platform ipad 0.8 @editurl https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/Database/Database.yml</p>\n\n<p>The top-level <code>Database</code> module, used for creating and accessing the\nin-application SQLite database.</p>\n\n",
  "extends": "Titanium.Module",
  "mixins": [

  ],
  "alternateClassNames": [

  ],
  "aliases": {
  },
  "singleton": false,
  "requires": [

  ],
  "uses": [

  ],
  "code_type": "nop",
  "inheritable": false,
  "inheritdoc": null,
  "meta": {
  },
  "id": "class-Titanium.Database",
  "members": {
    "cfg": [

    ],
    "property": [
      {
        "tagname": "property",
        "name": "FIELD_TYPE_DOUBLE",
        "owner": "Titanium.Database",
        "type": "Number",
        "doc": "<p>Constant for requesting a column's value returned in double form.</p>\n\n\n<p>@platform android 0.8\n@platform iphone 0.8\n@platform ipad 0.8</p>\n",
        "default": null,
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
          "readonly": true
        },
        "id": "property-FIELD_TYPE_DOUBLE",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 41759
          }
        ],
        "shortDoc": "Constant for requesting a column's value returned in double form. ...",
        "html_type": "Number",
        "html_meta": {
          "readonly": null
        }
      },
      {
        "tagname": "property",
        "name": "FIELD_TYPE_FLOAT",
        "owner": "Titanium.Database",
        "type": "Number",
        "doc": "<p>Constant for requesting a column's value returned in float form.</p>\n\n\n<p>@platform android 0.8\n@platform iphone 0.8\n@platform ipad 0.8</p>\n",
        "default": null,
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
          "readonly": true
        },
        "id": "property-FIELD_TYPE_FLOAT",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 41783
          }
        ],
        "shortDoc": "Constant for requesting a column's value returned in float form. ...",
        "html_type": "Number",
        "html_meta": {
          "readonly": null
        }
      },
      {
        "tagname": "property",
        "name": "FIELD_TYPE_INT",
        "owner": "Titanium.Database",
        "type": "Number",
        "doc": "<p>Constant for requesting a column's value returned in integer form.</p>\n\n\n<p>@platform android 0.8\n@platform iphone 0.8\n@platform ipad 0.8</p>\n",
        "default": null,
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
          "readonly": true
        },
        "id": "property-FIELD_TYPE_INT",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 41807
          }
        ],
        "shortDoc": "Constant for requesting a column's value returned in integer form. ...",
        "html_type": "Number",
        "html_meta": {
          "readonly": null
        }
      },
      {
        "tagname": "property",
        "name": "FIELD_TYPE_STRING",
        "owner": "Titanium.Database",
        "type": "Number",
        "doc": "<p>Constant for requesting a column's value returned in string form.</p>\n\n\n<p>@platform android 0.8\n@platform iphone 0.8\n@platform ipad 0.8</p>\n",
        "default": null,
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
          "readonly": true
        },
        "id": "property-FIELD_TYPE_STRING",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 41831
          }
        ],
        "shortDoc": "Constant for requesting a column's value returned in string form. ...",
        "html_type": "Number",
        "html_meta": {
          "readonly": null
        }
      },
      {
        "tagname": "property",
        "name": "apiName",
        "owner": "Titanium.Proxy",
        "type": "String",
        "doc": "<p>The name of the API that this proxy corresponds to.</p>\n\n\n<p>@description <p>The value of this property is the fully qualified name of the API. For example, <a href=\"#!/api/Titanium.UI.Button\" rel=\"Titanium.UI.Button\" class=\"docClass\">Button</a>\nreturns <code>Ti.UI.Button</code>.</p></p>\n\n<p>@platform android 3.2.0\n@platform blackberry 3.2.0\n@platform iphone 3.2.0\n@platform ipad 3.2.0\n@platform mobileweb 3.2.0</p>\n",
        "default": null,
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
          "readonly": true
        },
        "id": "property-apiName",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 235
          }
        ],
        "shortDoc": "The name of the API that this proxy corresponds to. ...",
        "html_type": "String",
        "html_meta": {
          "readonly": null
        }
      },
      {
        "tagname": "property",
        "name": "bubbleParent",
        "owner": "Titanium.Proxy",
        "type": "Boolean",
        "doc": "<p>Indicates if the proxy will bubble an event to its parent.</p>\n\n\n<p>@description <p>Some proxies (most commonly views) have a relationship to other proxies, often\nestablished by the add() method. For example, for a button added to a window, a\nclick event on the button would bubble up to the window. Other common parents are\ntable sections to their rows, table views to their sections, and scrollable views\nto their views. Set this property to false to disable the bubbling to the proxy's parent.</p></p>\n\n<p>@platform android 3.0.0\n@platform iphone 3.0.0\n@platform ipad 3.0.0</p>\n",
        "default": "true",
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "property-bubbleParent",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 207
          }
        ],
        "shortDoc": "Indicates if the proxy will bubble an event to its parent. ...",
        "html_type": "Boolean",
        "html_meta": {
        }
      },
      {
        "tagname": "property",
        "name": "lifecycleContainer",
        "owner": "Titanium.Proxy",
        "type": "Titanium.UI.Window/Titanium.UI.TabGroup",
        "doc": "<p>The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.</p>\n\n\n<p>@description <p>If this property is set to a Window or TabGroup, then the corresponding Activity lifecycle event callbacks\nwill also be called on the proxy. Proxies that require the activity lifecycle will need this property set\nto the appropriate containing Window or TabGroup.</p></p>\n\n<p>@platform android 3.6.0</p>\n",
        "default": null,
        "properties": null,
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "property-lifecycleContainer",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 262
          }
        ],
        "shortDoc": "The Window or TabGroup whose Activity lifecycle should be triggered on the proxy. ...",
        "html_type": "Titanium.UI.Window/Titanium.UI.TabGroup",
        "html_meta": {
        }
      }
    ],
    "method": [
      {
        "tagname": "method",
        "name": "addEventListener",
        "owner": "Titanium.Proxy",
        "doc": "<p>Adds the specified callback as an event listener for the named event.</p>\n\n",
        "params": [
          {
            "type": "String",
            "name": "name",
            "doc": "<p>Name of the event.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "String"
          },
          {
            "type": "Callback<Object>",
            "name": "callback",
            "doc": "<p>Callback function to invoke when the event is fired.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "Callback<Object>"
          }
        ],
        "return": {
          "type": "undefined",
          "name": "return",
          "doc": "\n",
          "properties": [

          ],
          "html_type": "undefined"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-addEventListener",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 38
          }
        ],
        "shortDoc": "Adds the specified callback as an event listener for the named event. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "applyProperties",
        "owner": "Titanium.Proxy",
        "doc": "<p>Applies the properties to the proxy.</p>\n\n\n<p>@description <p>Properties are supplied as a dictionary. Each key-value pair in the object is applied to the proxy such that\nmyproxy[key] = value.</p></p>\n",
        "params": [
          {
            "type": "Dictionary",
            "name": "props",
            "doc": "<p>A dictionary of properties to apply.</p>\n\n\n<p>@platform android 3.0.0\n@platform blackberry 3.3.0\n@platform iphone 3.0.0\n@platform ipad 3.0.0\n@platform mobileweb 3.0.0</p>\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "Dictionary"
          }
        ],
        "return": {
          "type": "undefined",
          "name": "return",
          "doc": "\n",
          "properties": [

          ],
          "html_type": "undefined"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-applyProperties",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 102
          }
        ],
        "shortDoc": "Applies the properties to the proxy. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "fireEvent",
        "owner": "Titanium.Proxy",
        "doc": "<p>Fires a synthesized event to any registered listeners.</p>\n\n",
        "params": [
          {
            "type": "String",
            "name": "name",
            "doc": "<p>Name of the event.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "String"
          },
          {
            "type": "Dictionary",
            "name": "event",
            "doc": "<p>A dictionary of keys and values to add to the <a href=\"#!/api/Titanium.Event\" rel=\"Titanium.Event\" class=\"docClass\">Titanium.Event</a> object sent to the listeners.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "Dictionary"
          }
        ],
        "return": {
          "type": "undefined",
          "name": "return",
          "doc": "\n",
          "properties": [

          ],
          "html_type": "undefined"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-fireEvent",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 85
          }
        ],
        "shortDoc": "Fires a synthesized event to any registered listeners. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "getApiName",
        "owner": "Titanium.Proxy",
        "doc": "<p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-apiName\" rel=\"Titanium.Proxy-property-apiName\" class=\"docClass\">apiName</a> property.</p>\n\n",
        "params": [

        ],
        "return": {
          "type": "String",
          "name": "return",
          "doc": "<p>@platform android 3.2.0\n@platform blackberry 3.2.0\n@platform iphone 3.2.0\n@platform ipad 3.2.0\n@platform mobileweb 3.2.0</p>\n",
          "properties": null,
          "html_type": "String"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-getApiName",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 157
          }
        ],
        "shortDoc": "Gets the value of the apiName property. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "getBubbleParent",
        "owner": "Titanium.Proxy",
        "doc": "<p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n",
        "params": [

        ],
        "return": {
          "type": "Boolean",
          "name": "return",
          "doc": "<p>@platform android 3.0.0\n@platform iphone 3.0.0\n@platform ipad 3.0.0</p>\n",
          "properties": null,
          "html_type": "Boolean"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-getBubbleParent",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 123
          }
        ],
        "shortDoc": "Gets the value of the bubbleParent property. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "getLifecycleContainer",
        "owner": "Titanium.Proxy",
        "doc": "<p>Gets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n",
        "params": [

        ],
        "return": {
          "type": "Titanium.UI.Window/Titanium.UI.TabGroup",
          "name": "return",
          "doc": "<p>@platform android 3.6.0</p>\n",
          "properties": null,
          "html_type": "Titanium.UI.Window/Titanium.UI.TabGroup"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-getLifecycleContainer",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 175
          }
        ],
        "shortDoc": "Gets the value of the lifecycleContainer property. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "install",
        "owner": "Titanium.Database",
        "doc": "<p>Installs an SQLite database to device's internal storage.</p>\n\n\n<p>@description <p>Copies an SQLite database file to the device's internal storage (only) and\ncreates a persistent name that is available for the lifetime of the app.\nOn Android, if the source file does not exist, an empty database is created.</p></p>\n\n<p>Returns a reference to the opened database. If the destination file already\nexists, behaves as <a href=\"#!/api/Titanium.Database-method-open\" rel=\"Titanium.Database-method-open\" class=\"docClass\">open</a>.</p>\n\n\n\n\n<p>This method is primarily used for iOS.</p>\n\n\n\n\n<p>With Android, as there is often minimal internal storage available, <code>install</code>\nmay only be appropriate for small databases or for prototyping. When database\nfiles are to be stored on external storage (for example, SD Card), a combination of\n<a href=\"#!/api/Titanium.Filesystem\" rel=\"Titanium.Filesystem\" class=\"docClass\">Titanium.Filesystem</a> and <a href=\"#!/api/Titanium.Database-method-open\" rel=\"Titanium.Database-method-open\" class=\"docClass\">open</a> is required.</p>\n\n\n\n\n<p>With Titanium 1.8.0.1 on iOS, the default database location changed in accordance\nwith Apple's guidelines. If a database file already exists in the old\nlocation, <code>install</code> will automatically move it to the new location\nrather than copying the file from the path provided in the first\nargument.</p>\n\n\n\n\n<p>Files stored in the <code>Private Documents</code> directory on iOS5 will be\nautomatically backed up to iCloud and removed from the device in low\nstorage situations. See\n<a href=\"https://developer.apple.com/library/ios/qa/qa1719/_index.html\">How do I prevent files from being backed up to iCloud and iTunes?</a>\nfor details. To prevent this for database files, use the <a href=\"#!/api/Titanium.Database.DB-property-file\" rel=\"Titanium.Database.DB-property-file\" class=\"docClass\">Titanium.Database.DB.file</a>\nobject with the <a href=\"#!/api/Titanium.Filesystem.File-method-setRemoteBackup\" rel=\"Titanium.Filesystem.File-method-setRemoteBackup\" class=\"docClass\">Titanium.Filesystem.File.setRemoteBackup</a> method. </p>\n\n\n\n\n<p>Always <a href=\"#!/api/Titanium.Database.DB-method-close\" rel=\"Titanium.Database.DB-method-close\" class=\"docClass\">close</a> the database after use.</p>\n\n\n<h3>Examples</h3>\n\n\n<h4>Install a Database (iOS)</h4>\n\n\n<p>A database, with a filename of <code>mydb1</code> and located in the same directory as the\nthe running script, is installed.</p>\n\n\n\n\n<pre><code>var db1 = Ti.Database.install('mydb1', 'mydb1Installed');\n</code></pre>\n\n\n\n\n<p>The file is copied to the default database location with a file\nextension of <code>sql</code>.</p>\n\n\n\n\n<p><strong>On simulator</strong></p>\n\n\n\n\n<ul>\n<li><code>/Users/user_name/Library/Application Support/iPhone Simulator/ios_version/Applications/apple_app_id/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Users/user_name/Library/Application Support/iPhone Simulator/ios_version/Applications/apple_app_id/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n\n\n\n\n<p><strong>On device</strong></p>\n\n\n\n\n<ul>\n<li><code>/Applications/apple_app_id/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Applications/apple_app_id/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n\n\n\n\n<p>To prevent the database file being automatically backed up to iCloud, use <code>setRemoteBackup</code>.</p>\n\n\n\n\n<pre><code>db1.file.setRemoteBackup(false);\n</code></pre>\n\n\n<h4>Install a Database to Internal Storage (Android)</h4>\n\n\n<p>A database, with a filename of <code>mydb1</code> and located in the same directory as the\nthe running script, is installed.</p>\n\n\n\n\n<pre><code>var db1 = Ti.Database.install('mydb1', 'mydb1Installed');\n</code></pre>\n\n\n\n\n<p>Unlike on iOS, no file extension is added. The file is opened in the\nfollowing default database location, on both emulator and device.</p>\n\n\n\n\n<ul>\n<li><code>file:///data/data/appID/databases/mydb1Installed</code></li>\n</ul>\n\n\n<h4>Install a Database to External Storage (Android)</h4>\n\n\n<p>The device is checked for the presence of external storage and a\ndatabase, with a filename of <code>mydb2</code> and located in the same directory as the\nthe running script, is installed.</p>\n\n\n\n\n<pre><code>if (Ti.Platform.name === 'android' &amp;&amp; Ti.Filesystem.isExternalStoragePresent()) {\n  var db2 = Ti.Database.install('mydb2', Ti.Filesystem.externalStorageDirectory + 'path' + Ti.Filesystem.separator + 'to' + Ti.Filesystem.separator + 'mydb2Installed');\n}\n</code></pre>\n\n\n\n\n<p>Unlike on iOS, no file extension is added. The file is copied to the\nabsolute path provided.</p>\n\n\n\n\n<ul>\n<li><code>file:///sdcard/path/to/mydb2Installed</code></li>\n</ul>\n\n",
        "params": [
          {
            "type": "String",
            "name": "path",
            "doc": "<p>Path and filename of the database file to copy to internal storage.\nFile location is relative to the script's context unless an absolute\npath, such as one constructed with a <a href=\"#!/api/Titanium.Filesystem\" rel=\"Titanium.Filesystem\" class=\"docClass\">Titanium.Filesystem</a>\nconstant, is used.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "String"
          },
          {
            "type": "String",
            "name": "dbName",
            "doc": "<p>Destination filename or absolute path, which will subsequently be passed to\n<a href=\"#!/api/Titanium.Database-method-open\" rel=\"Titanium.Database-method-open\" class=\"docClass\">open</a>.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "String"
          }
        ],
        "return": {
          "type": "Titanium.Database.DB",
          "name": "return",
          "doc": "<p>@platform android 0.8\n@platform iphone 0.8\n@platform ipad 0.8</p>\n",
          "properties": null,
          "html_type": "Titanium.Database.DB"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-install",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 41567
          }
        ],
        "shortDoc": "Installs an SQLite database to device's internal storage. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "open",
        "owner": "Titanium.Database",
        "doc": "<p>Opens an SQLite database.</p>\n\n\n<p>@description <p>Opens an SQLite database and returns a reference to it. If the database does\nnot exist, creates an empty database file and returns a reference to this\nopened database.</p></p>\n\n<p>With Titanium 1.8.0.1 on iOS, the default database location changed in accordance\nwith Apple's guidelines. If a database file already exists in the old\nlocation, <code>open</code> will automatically move it to the new location.</p>\n\n\n\n\n<p>Always <a href=\"#!/api/Titanium.Database.DB-method-close\" rel=\"Titanium.Database.DB-method-close\" class=\"docClass\">close</a> the database after use.</p>\n\n\n<h3>Examples</h3>\n\n\n<h4>Open a Database from Internal Storage (iOS)</h4>\n\n\n<p>A database, with a persistant name of <code>mydb1Installed</code> and located in the\ndefault database location on internal storage, is opened.</p>\n\n\n\n\n<pre><code>var db = Ti.Database.open('mydb1Installed');\n</code></pre>\n\n\n\n\n<p>A file extension of <code>sql</code> is added, and the file is opened from the\nfollowing location.</p>\n\n\n\n\n<p>On simulator</p>\n\n\n\n\n<ul>\n<li><code>/Users/&lt;user name&gt;/Library/Application Support/iPhone Simulator/&lt;iOS version&gt;/Applications/&lt;apple app id&gt;/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Users/&lt;user name&gt;/Library/Application Support/iPhone Simulator/&lt;iOS version&gt;/Applications/&lt;apple app id&gt;/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n\n\n\n\n<p>On device</p>\n\n\n\n\n<ul>\n<li><code>/Applications/&lt;apple app id&gt;/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Applications/&lt;apple app id&gt;/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n\n\n<h4>Open a Database on Internal Storage (Android)</h4>\n\n\n<p>A database, with a persistant name of <code>mydb1Installed</code> and located in the\ndefault database location on internal storage, is opened.</p>\n\n\n\n\n<p>var db1 = Ti.Database.open('mydb1Installed');</p>\n\n\n\n\n<p>Unlike on iOS, no file extension is added. The file is opened in\nthe following location.</p>\n\n\n\n\n<ul>\n<li><code>file:///data/data/appID/databases/mydb1Installed</code></li>\n</ul>\n\n\n<h4>Open a Database on External Storage (Android)</h4>\n\n\n<p>A database, with a filename of <code>mydb2Installed</code> and located at the\nabsolute path provided, is opened.</p>\n\n\n\n\n<pre><code>if (Ti.Platform.name === 'android' &amp;&amp; Ti.Filesystem.isExternalStoragePresent()) {\n  var db2 = Ti.Database.open(Ti.Filesystem.externalStorageDirectory + 'path' + Ti.Filesystem.separator + 'to' + Ti.Filesystem.separator + 'mydb2Installed');\n}\n</code></pre>\n\n\n\n\n<p>Unlike on iOS, no file extension is added. The file is copied to the\nabsolute path, as follows.</p>\n\n\n\n\n<ul>\n<li><code>file:///sdcard/path/to/mydb2Installed</code></li>\n</ul>\n\n\n<h4>Open a Database in the shared directory of an application group (iOS)</h4>\n\n\n<p>Opens a Database in a shared directory</p>\n\n\n\n\n<pre><code>var suiteDir = Ti.Filesystem.directoryForSuite('group.appc.Sharing');\nif (!suiteDir) {\n    logInApp('Suite Directory not found, check Entitlements.');\n    return;\n}\nvar path = suiteDir + 'TestDB';\nvar db = Ti.Database.open(path);\ndb.close();\n</code></pre>\n\n",
        "params": [
          {
            "type": "String",
            "name": "dbName",
            "doc": "<p>The dbname previously passed to <a href=\"#!/api/Titanium.Database-method-install\" rel=\"Titanium.Database-method-install\" class=\"docClass\">install</a>. An absolute path\nto the file, including one that is constructed with a <a href=\"#!/api/Titanium.Filesystem\" rel=\"Titanium.Filesystem\" class=\"docClass\">Titanium.Filesystem</a>\nconstant or <a href=\"#!/api/Titanium.Filesystem-method-directoryForSuite\" rel=\"Titanium.Filesystem-method-directoryForSuite\" class=\"docClass\">Titanium.Filesystem.directoryForSuite</a> method, may be used.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "String"
          }
        ],
        "return": {
          "type": "Titanium.Database.DB",
          "name": "return",
          "doc": "\n",
          "properties": null,
          "html_type": "Titanium.Database.DB"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-open",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 41673
          }
        ],
        "shortDoc": "Opens an SQLite database. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "removeEventListener",
        "owner": "Titanium.Proxy",
        "doc": "<p>Removes the specified callback as an event listener for the named event.</p>\n\n\n<p>@description <p>Multiple listeners can be registered for the same event, so the\n<code>callback</code> parameter is used to determine which listener to remove. </p></p>\n\n<p>When adding a listener, you must save a reference to the callback function\nin order to remove the listener later:</p>\n\n\n\n\n<pre><code>var listener = function() { Ti.API.info(\"Event listener called.\"); }\nwindow.addEventListener('click', listener);\n</code></pre>\n\n\n\n\n<p>To remove the listener, pass in a reference to the callback function:</p>\n\n\n\n\n<pre><code>window.removeEventListener('click', listener);\n</code></pre>\n\n",
        "params": [
          {
            "type": "String",
            "name": "name",
            "doc": "<p>Name of the event.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "String"
          },
          {
            "type": "Callback<Object>",
            "name": "callback",
            "doc": "<p>Callback function to remove. Must be the same function passed to <code>addEventListener</code>.</p>\n\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "Callback<Object>"
          }
        ],
        "return": {
          "type": "undefined",
          "name": "return",
          "doc": "\n",
          "properties": [

          ],
          "html_type": "undefined"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-removeEventListener",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 55
          }
        ],
        "shortDoc": "Removes the specified callback as an event listener for the named event. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "setBubbleParent",
        "owner": "Titanium.Proxy",
        "doc": "<p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-bubbleParent\" rel=\"Titanium.Proxy-property-bubbleParent\" class=\"docClass\">bubbleParent</a> property.</p>\n\n",
        "params": [
          {
            "type": "Boolean",
            "name": "bubbleParent",
            "doc": "<p>New value for the property.</p>\n\n\n<p>@platform android 3.0.0\n@platform iphone 3.0.0\n@platform ipad 3.0.0</p>\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "Boolean"
          }
        ],
        "return": {
          "type": "undefined",
          "name": "return",
          "doc": "\n",
          "properties": [

          ],
          "html_type": "undefined"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-setBubbleParent",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 139
          }
        ],
        "shortDoc": "Sets the value of the bubbleParent property. ...",
        "html_meta": {
        }
      },
      {
        "tagname": "method",
        "name": "setLifecycleContainer",
        "owner": "Titanium.Proxy",
        "doc": "<p>Sets the value of the <a href=\"#!/api/Titanium.Proxy-property-lifecycleContainer\" rel=\"Titanium.Proxy-property-lifecycleContainer\" class=\"docClass\">lifecycleContainer</a> property.</p>\n\n",
        "params": [
          {
            "type": "Titanium.UI.Window/Titanium.UI.TabGroup",
            "name": "lifecycleContainer",
            "doc": "<p>New value for the property.</p>\n\n\n<p>@platform android 3.6.0</p>\n",
            "optional": false,
            "default": null,
            "properties": [

            ],
            "html_type": "Titanium.UI.Window/Titanium.UI.TabGroup"
          }
        ],
        "return": {
          "type": "undefined",
          "name": "return",
          "doc": "\n",
          "properties": [

          ],
          "html_type": "undefined"
        },
        "inheritable": false,
        "inheritdoc": null,
        "meta": {
        },
        "id": "method-setLifecycleContainer",
        "files": [
          {
            "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
            "linenr": 189
          }
        ],
        "shortDoc": "Sets the value of the lifecycleContainer property. ...",
        "html_meta": {
        }
      }
    ],
    "event": [

    ],
    "css_var": [

    ],
    "css_mixin": [

    ]
  },
  "statics": {
    "cfg": [

    ],
    "property": [

    ],
    "method": [

    ],
    "event": [

    ],
    "css_var": [

    ],
    "css_mixin": [

    ]
  },
  "files": [
    {
      "filename": "/Users/Mo/projects/titanium_haxe_3/src/titanium.js",
      "linenr": 41546
    }
  ],
  "html_meta": {
  },
  "component": false,
  "superclasses": [
    "Titanium.Proxy",
    "Titanium.Module"
  ],
  "subclasses": [

  ],
  "mixedInto": [

  ],
  "parentMixins": [

  ]
}